plugins {
    alias(libs.plugins.android.application)
}

android {
    namespace 'org.favil.stones'
    compileSdk 34

    defaultConfig {
        applicationId "org.favil.stones"
        minSdk 31
        targetSdk 34
        versionCode 7
        versionName "1.0"
        // need this otherwise it won't insert libc++_shared.so
        externalNativeBuild {
            cmake {
                arguments "-DANDROID_STL=c++_shared"
            }
        }
        // set up targets
        ndk {
            abiFilters 'arm64-v8a', 'armeabi-v7a', 'x86', 'x86_64'
        }
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        release {
            def Properties raw_props = new Properties()
            raw_props.load(new FileInputStream(file("keystore.properties")))
            def Properties key_props = new Properties()
            raw_props.entrySet().forEach { e -> key_props.put(e.getKey(), e.getValue().replace("\${HOME}", String.valueOf(System.getenv("HOME")))) }
            storeFile file(String.valueOf(key_props['STORE_FILE']))
            storePassword key_props['STORE_PASSWORD']
            keyPassword key_props['KEY_PASSWORD']
            keyAlias key_props['KEY_ALIAS']
        }
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildFeatures {
        prefab true
    }
    // The final part to insert libc++_shared.so only
    packagingOptions {
        exclude 'lib/*/libdummy.so'
    }
    sourceSets {
        main {
            assets.srcDirs += files('../../../assets')

            res.srcDirs += files('../../../assets/android-res')
        }
    }
}

dependencies {
    implementation libs.appcompat
    implementation libs.material
    implementation libs.games.activity
    testImplementation libs.junit
    androidTestImplementation libs.ext.junit
    androidTestImplementation libs.espresso.core
}
